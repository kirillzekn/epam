
trigger: none
#- main

pool:
  vmImage: ubuntu-latest

steps:

- task: DownloadSecureFile@1
  name: caCertificate
  inputs:
    secureFile: 'azure_id_rsa.pub'
    retryCount: '2'

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/infrastructure'
    #workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/ansible'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-svc'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'epam-tf-backeng-rg'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'epamtfbackendstorage'
    backendAzureRmStorageAccountSku: 'Standard_LRS'
    backendAzureRmContainerName: 'epamtfbackendcontainer'
    backendAzureRmKey: 'epam-tf-state.tfstate'
    allowTelemetryCollection: true

#- task: TerraformCLI@0
#  inputs:
#    #command: 'plan'
#    command: 'apply'
#    #command: 'destroy'
#    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/infrastructure'
#    #workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/ansible'
#    environmentServiceName: 'azure-resource-manager-svc'
#    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var mysql-admin-login=$(mysql-admin-login) -var mysql-admin-password=$(mysql-admin-password)'
#    #commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var admin_ssh_username=$(admin_ssh_username) -var admin_ssh_key=$(caCertificate.secureFilePath)'
#    allowTelemetryCollection: true

- task: AzureMysqlDeployment@1
  inputs:
    azureSubscription: 'Pay-As-You-Go(7eb18278-1682-4ad9-9148-814e2b6039f9)'
    ServerName: 'zekn-mysql-server.mysql.database.azure.com'
    DatabaseName: 'zekn-mysql-db'
    SqlUsername: '$(mysql-admin-login)'
    SqlPassword: '$(mysql-admin-password)'
    TaskNameSelector: 'SqlTaskFile'
    SqlFile: './sql/mysql.sql'
    IpDetectionMethod: 'AutoDetect'
